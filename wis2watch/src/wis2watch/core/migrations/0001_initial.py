# Generated by Django 5.2.7 on 2025-10-29 13:33

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import django_extensions.db.fields
import timescale.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('identifier', models.CharField(help_text='URN identifier of the dataset', max_length=500, unique=True)),
                ('title', models.CharField(max_length=500)),
                ('wmo_data_policy', models.CharField(choices=[('core', 'Core'), ('recommended', 'Recommended')], max_length=20)),
                ('wmo_topic_hierarchy', models.CharField(help_text='MQTT topic hierarchy for this dataset', max_length=500, unique=True)),
                ('self_link', models.URLField(blank=True, max_length=1000)),
                ('collection_link', models.URLField(blank=True, max_length=1000)),
                ('raw_json', models.JSONField(help_text='Complete raw JSON from discovery metadata')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted')], default='active', max_length=20)),
                ('metadata_created', models.DateTimeField(blank=True, help_text='Created timestamp from metadata', null=True)),
                ('metadata_updated', models.DateTimeField(blank=True, help_text='Updated timestamp from metadata', null=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['node', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('wigos_id', models.CharField(help_text='WIGOS Identifier of the station', max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('location', django.contrib.gis.db.models.fields.PointField(dim=3, help_text='Location of the station', srid=4326)),
                ('facility_type', models.CharField(choices=[('landFixed', 'Land Fixed'), ('landMobile', 'Land Mobile'), ('sea', 'Sea'), ('airFixed', 'Air Fixed'), ('airMobile', 'Air Mobile')], default='landFixed', max_length=20)),
                ('raw_json', models.JSONField(help_text='Complete raw JSON from stations endpoint')),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('datasets', models.ManyToManyField(related_name='stations', to='wis2watchcore.dataset')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StationMQTTMessageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('time', timescale.db.models.fields.TimescaleDateTimeField(interval='1 day')),
                ('message_id', models.CharField(help_text='UUID from the message', max_length=255)),
                ('data_id', models.CharField(help_text='Data ID from message properties', max_length=500)),
                ('publish_datetime', models.DateTimeField(db_index=True, help_text='When message was published')),
                ('received_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text='When we received the message')),
                ('canonical_link', models.URLField(blank=True, max_length=1000)),
                ('raw_json', models.JSONField(help_text='Complete raw MQTT message')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='wis2watchcore.dataset')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='wis2watchcore.station')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WIS2Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(help_text='Friendly name for this node', max_length=200)),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Country')),
                ('node_type', models.CharField(choices=[('wis2box', 'WIS2Box'), ('other', 'Other Software')], default='wis2box', max_length=20)),
                ('base_url', models.URLField(help_text='Base URL of the node', max_length=500)),
                ('discovery_metadata_url', models.URLField(blank=True, help_text='Custom URL for discovery metadata. Auto-generated for wis2box.', max_length=500)),
                ('stations_url', models.URLField(blank=True, help_text='Custom URL for stations list. Auto-generated for wis2box.', max_length=500)),
                ('mqtt_host', models.CharField(blank=True, max_length=255)),
                ('mqtt_port', models.IntegerField(default=1883)),
                ('mqtt_username', models.CharField(blank=True, max_length=100)),
                ('mqtt_password', models.CharField(blank=True, max_length=255)),
                ('mqtt_use_tls', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error')], default='active', max_length=20)),
                ('last_check', models.DateTimeField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True)),
                ('centre_id', models.CharField(blank=True, help_text='WMO centre ID', max_length=100)),
            ],
            options={
                'verbose_name': 'WIS2 Node',
                'verbose_name_plural': 'WIS2 Nodes',
                'ordering': ['country', 'name'],
                'unique_together': {('country', 'centre_id')},
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(choices=[('discovery_metadata', 'Discovery Metadata'), ('stations', 'Stations')], max_length=50)),
                ('status', models.CharField(choices=[('success', 'Success'), ('partial', 'Partial Success'), ('failed', 'Failed')], max_length=20)),
                ('items_found', models.IntegerField(default=0)),
                ('items_created', models.IntegerField(default=0)),
                ('items_updated', models.IntegerField(default=0)),
                ('items_deleted', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='wis2watchcore.wis2node')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='dataset',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to='wis2watchcore.wis2node'),
        ),
        migrations.AddIndex(
            model_name='station',
            index=models.Index(fields=['wigos_id'], name='wis2watchco_wigos_i_33ba8b_idx'),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['node', '-started_at'], name='wis2watchco_node_id_fc1859_idx'),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['sync_type', '-started_at'], name='wis2watchco_sync_ty_b08ea4_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['identifier'], name='wis2watchco_identif_089888_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['wmo_topic_hierarchy'], name='wis2watchco_wmo_top_795672_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['status'], name='wis2watchco_status_e90a2f_idx'),
        ),
    ]
